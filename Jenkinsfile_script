pipeline {  
  agent any
  
  parameters {
  string defaultValue: 'build-code-a1', description: 'Amazon S3 Bucket Name', name: 'BUCKET'
  string defaultValue: 'client-xyz', description: 'Amazon S3 Bucket Application Directory', name: 'FOLDER'
  string defaultValue: 'ap-south-1', description: 'Amazon S3 Bucket Region', name: 'REGION'
  string defaultValue: 'build/', description: 'Amazon S3 Bucket Build Directory', name: 'BUILD'
  string defaultValue: 'index.html', description: 'Application Index File', name: 'INDEX'

}
  
  stages{
      stage('clone from s3') {
          steps{
              sh 'aws s3 sync s3://mob-source/react-app-jenkins/ .'
              sh 'npm install'
              sh 'npm run build'
          }
      }
       stage('Create Bucket') {  
      steps {  
        echo 'Running create bucket phase'
        withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'kashif-aws-id', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) { 
         script {
            def status = sh(script: "aws s3api head-bucket --bucket ${params.BUCKET}", returnStatus: true)
             if (status != 0) {
             sh "aws s3api create-bucket --bucket ${params.BUCKET} --region ${params.REGION} --create-bucket-configuration LocationConstraint=${params.REGION}"
  }
}
        }  
      }   
    }
    stage('Deploy') {  
      steps {  
        echo 'Running deploy phase'
        withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'kashif-aws-id', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) { 
          sh 'aws s3 ls' 
          sh "aws s3 sync ${params.BUILD} s3://${params.BUCKET}/${params.FOLDER} --delete" 
        }  
      }   
    }
    
  }
  post { 
    success {  
      echo "Deployment to Amazon S3 suceeded for JOB - ${env.JOB_NAME} with BUILD NUMBER - ${env.BUILD_NUMBER}"
      echo "The Jenkins BUILD URL of this project is: ${env.BUILD_URL}" 
      echo "The Amazon S3 BUILD URL of this project is: https://${params.BUCKET}.s3.amazonaws.com/${params.FOLDER}/${params.INDEX}" 
      
      emailext attachLog: true,
             body: '''${SCRIPT, template="groovy-html.template"}''', 
             subject: "${env.JOB_NAME} - Build # ${env.BUILD_NUMBER} - Successful", 
             mimeType: 'text/html',from: "muzafferjoya@gmail.com", to: "muzafferjoya@gmail.com"
    }  
    failure {  
      echo "Deployment to Amazon S3 failed for JOB - ${env.JOB_NAME} with BUILD NUMBER - ${env.BUILD_NUMBER}"
      echo "The Jenkins BUILD URL of this project is: ${env.BUILD_URL}"
     emailext attachLog: true,
             body: '''${SCRIPT, template="groovy-html.template"}''', 
             subject: "${env.JOB_NAME}  - Build # ${env.BUILD_NUMBER} - Failed", 
             mimeType: 'text/html',from: "muzafferjoya@gmail.com", to: "muzafferjoya@gmail.com"
    }  
  }
}
